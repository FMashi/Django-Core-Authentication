openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/auth/user/:
    get:
      operationId: retrieveUserDetails
      description: 'Reads and updates UserModel fields

        Accepts GET, PUT, PATCH methods.


        Default accepted fields: username, first_name, last_name

        Default display fields: pk, username, email, first_name, last_name

        Read-only fields: pk, email


        Returns UserModel fields.'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
      tags:
      - api
    put:
      operationId: updateUserDetails
      description: 'Reads and updates UserModel fields

        Accepts GET, PUT, PATCH methods.


        Default accepted fields: username, first_name, last_name

        Default display fields: pk, username, email, first_name, last_name

        Read-only fields: pk, email


        Returns UserModel fields.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetails'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateUserDetails
      description: 'Reads and updates UserModel fields

        Accepts GET, PUT, PATCH methods.


        Default accepted fields: username, first_name, last_name

        Default display fields: pk, username, email, first_name, last_name

        Read-only fields: pk, email


        Returns UserModel fields.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetails'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
      tags:
      - api
  /api/auth/logout/:
    get:
      operationId: listLogouts
      description: 'Calls Django logout method and delete the Token object

        assigned to the current User object.


        Accepts/Returns nothing.'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
    post:
      operationId: createLogout
      description: 'Calls Django logout method and delete the Token object

        assigned to the current User object.


        Accepts/Returns nothing.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /profile/:
    get:
      operationId: listgetProfiles
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - profile
  /api/auth/registration/:
    post:
      operationId: createRegister
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Register'
          description: ''
      tags:
      - api
  /api/auth/registration/verify-email/:
    post:
      operationId: createVerifyEmail
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyEmail'
          description: ''
      tags:
      - api
  /api/auth/registration/resend-email/:
    post:
      operationId: createEmailAddress
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResendEmailVerification'
          description: ''
      tags:
      - api
  /api/auth/login/:
    post:
      operationId: createCustomLogin
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomLogin'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomLogin'
          description: ''
      tags:
      - api
  /api/auth/password/reset/:
    post:
      operationId: createPasswordReset
      description: 'Calls Django Auth PasswordResetForm save method.


        Accepts the following POST parameters: email

        Returns the success/fail message.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordReset'
          description: ''
      tags:
      - api
  /api/auth/password/reset/confirm/:
    post:
      operationId: createPasswordResetConfirm
      description: "Password reset e-mail link is confirmed, therefore\nthis resets\
        \ the user's password.\n\nAccepts the following POST parameters: token, uid,\n\
        \    new_password1, new_password2\nReturns the success/fail message."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
      tags:
      - api
  /api/auth/password/change/:
    post:
      operationId: createPasswordChange
      description: 'Calls Django Auth SetPasswordForm save method.


        Accepts the following POST parameters: new_password1, new_password2

        Returns the success/fail message.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordChange'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordChange'
          description: ''
      tags:
      - api
  /api/auth/token/verify/:
    post:
      operationId: createTokenVerify
      description: 'Takes a token and indicates if it is valid.  This view provides
        no

        information about a token''s fitness for a particular use.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
      tags:
      - api
  /api/auth/token/refresh/:
    post:
      operationId: createCookieTokenRefresh
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CookieTokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CookieTokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CookieTokenRefresh'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CookieTokenRefresh'
          description: ''
      tags:
      - api
  /api/auth/facebook/:
    post:
      operationId: createSocialLogin
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SocialLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SocialLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SocialLogin'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialLogin'
          description: ''
      tags:
      - api
  /api/auth/twitter/:
    post:
      operationId: createTwitterLogin
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TwitterLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TwitterLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TwitterLogin'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwitterLogin'
          description: ''
      tags:
      - api
  /api/auth/github/:
    post:
      operationId: createSocialLogin
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SocialLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SocialLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SocialLogin'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialLogin'
          description: ''
      tags:
      - api
  /api/auth/google/:
    post:
      operationId: createSocialLogin
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SocialLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SocialLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SocialLogin'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialLogin'
          description: ''
      tags:
      - api
  /profile/update/:
    put:
      operationId: updateupdateProfile
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - profile
components:
  schemas:
    UserDetails:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
    Register:
      type: object
      properties:
        username:
          type: string
          maxLength: 30
          minLength: 1
        email:
          type: string
          format: email
        password1:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
      required:
      - username
      - email
      - password1
      - password2
    VerifyEmail:
      type: object
      properties:
        key:
          type: string
          writeOnly: true
      required:
      - key
    ResendEmailVerification:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    CustomLogin:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - password
    PasswordReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetConfirm:
      type: object
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
        uid:
          type: string
        token:
          type: string
      required:
      - new_password1
      - new_password2
      - uid
      - token
    PasswordChange:
      type: object
      properties:
        old_password:
          type: string
          maxLength: 128
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
      required:
      - old_password
      - new_password1
      - new_password2
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    CookieTokenRefresh:
      type: object
      properties:
        refresh:
          type: string
          description: WIll override cookie.
        access:
          type: string
          readOnly: true
    SocialLogin:
      type: object
      properties:
        access_token:
          type: string
        code:
          type: string
        id_token:
          type: string
    TwitterLogin:
      type: object
      properties:
        access_token:
          type: string
        token_secret:
          type: string
      required:
      - access_token
      - token_secret
